<!-- -*- mode: XML -*- -->
<launch>

  <!--  mit racecar launch -->

  <arg name="gui" default="false" />
  <arg name="run_camera" default="false"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- Launch a map from the maps folder-->
  <arg name="map" default="$(find racecar_control)/maps/building_31.yaml"/>
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map)"/>

  <!-- urdf xml robot description loaded on the Parameter Server, converting the xacro into a proper urdf file-->
  <param name="robot_description" command="$(find xacro)/xacro '$(find racecar_description)/urdf/racecar.xacro'" />

  <!-- Read joint positions from joint_states, then publish the vehicle's state to tf. -->
  <node name="vehicle_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" value="30.0"/>
  </node>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="racecar_spawn" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model racecar -z 0.05" />  

  <node pkg="amcl" type="amcl" name="amcl">
        <param name="tf_broadcast" value="true" />
	<param name="base_frame_id" value="/base_link" />
	<param name="global_frame_id" value="/map" />
	<param name="odom_frame_id" value="/base_link" />
	<param name="use_map_topic" value="true" />
  </node>

 <!-- racecar planner launch  -->
 <node pkg="racecar_control" type="racecar_planner8803" name="racecar_planner8803" output="screen">
    <param name="nb_obstacle_check" value="20" />
    <param name="epsilon" value="0.5" />
    <param name="unknown_space_probability" value="0.4" />
    <param name="inflation_radius" value="0.4" />
    <param name="waypoint_check_distance" value="0.5" />
    <param name="waypoint_max_distance" value="0.2" />
    <param name="keep_moving" value="false" />
  </node>

  <!-- goal marker server launch  -->
  <node pkg="racecar_control" type="goal_marker_server" name="goal_marker_server" output="screen"/>

 <!-- ros_control racecar launch file -->
  <include file="$(find racecar_control)/launch/racecar_control.launch" ns="/"/> 
<!-- Spawn the MUXs -->
  <arg name="racecar_version" default="racecar-v2" />
  <include file="$(find racecar)/launch/mux.launch" ns="vesc" />

  <!-- servo command to simu  -->
  <node pkg="racecar_control" type="servo_command_to_simu" name="servo_command_to_simu" output="screen">
      <param name="frequency" value="100" />
      <param name="alpha" value="0.3" />
      <param name="linear_decay" value="0.5" />
      <param name="delta_max" value="0.7" />
      <param name="v_max" value="1.0" />
    </node>

 <!-- waypoint tracker launch  -->
  <node pkg="racecar_control" type="point_tracker" name="point_tracker" output="screen">
    <param name="filter_alpha" value="0.8" />
    <param name="frequency" value="100.0" />
    <param name="speed_max" value="1.0" />
    <param name="throttle_max" value="1.0" />
    <param name="throttle_min" value="0.85" />
    <param name="throttle_dist_gain" value="1.0" />
    <param name="throttle_speed_gain" value="1.5" />
    <param name="steering_gain" value="1.0" />
    <param name="uturn_throttle" value="1.0" />
  </node> 
  

<node pkg="rviz" type="rviz" name="rviz"/>

</launch>
